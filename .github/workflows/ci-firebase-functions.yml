name: CI Firebase Functions

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v3
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: echo '${{ toJSON(steps.node_modules_cache_id.outputs) }}'

      - if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm install
        working-directory: ./functions
      - run: npm ls --depth=0
        working-directory: ./functions
      - run: npm run build --if-present
        working-directory: ./functions

  notify:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - uses: actions/checkout@v3

      - name: Slack Notification on Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GitHubActionsResultNotificationBot
          SLACK_CHANNEL: next-web-technology-net
          SLACK_TITLE: CI Success
          SLACK_COLOR: good

      - name: Slack Notification on Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GitHubActionsResultNotificationBot
          SLACK_CHANNEL: next-web-technology-net
          SLACK_TITLE: CI Failure
          SLACK_COLOR: danger
